{"ast":null,"code":"import { TransactionService } from 'app/front/service/transaction.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/front/service/transaction.service\";\nimport * as i2 from \"@angular/forms\";\nexport let AddTransactionComponent = /*#__PURE__*/(() => {\n  class AddTransactionComponent {\n    constructor(transactionService) {\n      this.transactionService = transactionService;\n    }\n    ngOnInit() {}\n    addTransaction(transactionDTO) {\n      this.transactionService.addTransaction(transactionDTO).subscribe(response => console.log(response), error => console.log(error));\n    }\n  }\n  AddTransactionComponent.ɵfac = function AddTransactionComponent_Factory(t) {\n    return new (t || AddTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService));\n  };\n  AddTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTransactionComponent,\n    selectors: [[\"app-add-transaction\"]],\n    decls: 32,\n    vars: 5,\n    consts: [[\"transactionForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"TRANSFER\"], [\"value\", \"DEPOSIT\"], [\"value\", \"WITHDRAWAL\"], [\"value\", \"LOAN_PAYMENT\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ribEmetteur\"], [\"type\", \"text\", \"id\", \"ribEmetteur\", \"name\", \"ribEmetteur\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"ribRecipient\"], [\"type\", \"text\", \"id\", \"ribRecipient\", \"name\", \"ribRecipient\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"name\", \"amount\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function AddTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", null, 0)(2, \"div\", 1)(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_select_ngModelChange_5_listener($event) {\n          return ctx.transactionType = $event;\n        });\n        i0.ɵɵelementStart(6, \"option\", 4);\n        i0.ɵɵtext(7, \"Transfer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Deposit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Withdrawal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 7);\n        i0.ɵɵtext(13, \"Loan Payment\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 1)(15, \"label\", 8);\n        i0.ɵɵtext(16, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.transactionDescription = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 1)(19, \"label\", 10);\n        i0.ɵɵtext(20, \"Emetteur RIB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.transactionRibEmetteur = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\", 12);\n        i0.ɵɵtext(24, \"Recipient RIB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 13);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_25_listener($event) {\n          return ctx.transactionRibRecipient = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 1)(27, \"label\", 14);\n        i0.ɵɵtext(28, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"input\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_input_ngModelChange_29_listener($event) {\n          return ctx.transactionAmount = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function AddTransactionComponent_Template_button_click_30_listener() {\n          return ctx.addTransaction();\n        });\n        i0.ɵɵtext(31, \"Add Transaction\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionType);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionDescription);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionRibEmetteur);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionRibRecipient);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionAmount);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm]\n  });\n  return AddTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}