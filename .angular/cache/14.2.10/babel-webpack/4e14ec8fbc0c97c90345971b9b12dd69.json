{"ast":null,"code":"import { Transaction } from 'app/front/class/transaction';\nimport { TransactionService } from 'app/front/service/transaction.service';\nimport { Router } from '@angular/router';\nimport * as Rellax from 'rellax';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/front/service/transaction.service\";\nimport * as i2 from \"@angular/router\";\nexport let TransactionComponent = /*#__PURE__*/(() => {\n  class TransactionComponent {\n    constructor(transactionService, router) {\n      this.transactionService = transactionService;\n      this.router = router;\n      this.alerts = [];\n      this.newTransaction = new Transaction();\n    }\n    ngOnInit() {\n      var rellaxHeader = new Rellax('.rellax-header');\n      var body = document.getElementsByTagName('body')[0];\n      body.classList.add('app-transaction');\n      var navbar = document.getElementsByTagName('nav')[0];\n      navbar.classList.add('navbar-transparent');\n      this.showTransaction();\n    }\n    showTransaction() {\n      this.transactionService.getAllTransaction().subscribe(transactions => {\n        this.transaction = transactions;\n      });\n    }\n  }\n  TransactionComponent.ɵfac = function TransactionComponent_Factory(t) {\n    return new (t || TransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  TransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionComponent,\n    selectors: [[\"app-transaction\"]],\n    decls: 2,\n    vars: 0,\n    template: function TransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"transaction works!\");\n        i0.ɵɵelementEnd();\n      }\n    }\n  });\n  return TransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}