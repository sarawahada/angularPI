{"ast":null,"code":"import { TransactionService } from 'app/front/service/transaction.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/front/service/transaction.service\";\nexport let AddTransactionComponent = /*#__PURE__*/(() => {\n  class AddTransactionComponent {\n    constructor(fb, transactionService) {\n      this.fb = fb;\n      this.transactionService = transactionService;\n      this.zoom = 14;\n      this.lat = 44.445248;\n      this.lng = 26.099672;\n      this.styles = [{\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#e9e9e9\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 29\n        }, {\n          \"weight\": 0.2\n        }]\n      }, {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 18\n        }]\n      }, {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#dedede\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [{\n          \"visibility\": \"on\"\n        }, {\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [{\n          \"saturation\": 36\n        }, {\n          \"color\": \"#333333\"\n        }, {\n          \"lightness\": 40\n        }]\n      }, {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [{\n          \"visibility\": \"off\"\n        }]\n      }, {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f2f2f2\"\n        }, {\n          \"lightness\": 19\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 17\n        }, {\n          \"weight\": 1.2\n        }]\n      }];\n      this.data = new Date();\n      this.alerts = [];\n      this.transactionForm = this.fb.group({\n        id_acc: ['', Validators.required],\n        type: ['', Validators.required],\n        description: [''],\n        ribEmetteur: [''],\n        ribRecipient: [''],\n        amount: ['', Validators.required]\n      });\n    }\n    ngOnInit() {\n      this.date_trans = new Date();\n    }\n    ngOnDestroy() {}\n    onSubmit() {\n      const transactionDTO = this.transactionForm.value;\n      this.transactionService.addTransaction(transactionDTO).subscribe(response => console.log('Transaction added successfully'), error => console.error(error));\n    }\n    getCurrentDate() {\n      const date = new Date();\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      return `${year}-${month}-${day}`;\n    }\n  }\n  AddTransactionComponent.ɵfac = function AddTransactionComponent_Factory(t) {\n    return new (t || AddTransactionComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionService));\n  };\n  AddTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTransactionComponent,\n    selectors: [[\"app-add-transaction\"]],\n    decls: 37,\n    vars: 2,\n    consts: [[1, \"form-container\"], [3, \"formGroup\", \"submit\"], [\"for\", \"id_acc\"], [\"type\", \"number\", \"id\", \"id_acc\", \"formControlName\", \"id_acc\"], [\"for\", \"type\"], [\"id\", \"type\", \"formControlName\", \"type\"], [\"value\", \"DEPOSITS\"], [\"value\", \"WITHDRAWL\"], [\"value\", \"LOANPAYMENTS\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"for\", \"date_trans\"], [\"type\", \"text\", \"id\", \"date_trans\", \"formControlName\", \"date_trans\", 3, \"value\"], [\"for\", \"ribRecipient\"], [\"type\", \"text\", \"id\", \"ribRecipient\", \"formControlName\", \"ribRecipient\"], [\"for\", \"amount\"], [\"type\", \"number\", \"id\", \"amount\", \"formControlName\", \"amount\"], [\"type\", \"submit\"], [1, \"balance-container\"], [1, \"balance\"]],\n    template: function AddTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function AddTransactionComponent_Template_form_submit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Account ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Transaction Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 5)(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Deposit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 7);\n        i0.ɵɵtext(13, \"Withdrawal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 8);\n        i0.ɵɵtext(15, \"Loan Payment\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\")(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\")(21, \"label\", 11);\n        i0.ɵɵtext(22, \"Date:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\")(25, \"label\", 13);\n        i0.ɵɵtext(26, \" RIB:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\")(29, \"label\", 15);\n        i0.ɵɵtext(30, \"Amount:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 17);\n        i0.ɵɵtext(33, \"Add Transaction\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 18)(35, \"span\", 19);\n        i0.ɵɵtext(36, \"Current Account Balance: $1000\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.transactionForm);\n        i0.ɵɵadvance(22);\n        i0.ɵɵproperty(\"value\", ctx.getCurrentDate());\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n  }\\n\\n  form[_ngcontent-%COMP%] {\\n    width: 50%;\\n    padding: 20px;\\n    border: 1px solid #ddd;\\n    border-radius: 5px;\\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n\\n  input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    margin-bottom: 10px;\\n    padding: 5px;\\n    border: 1px solid #ddd;\\n    border-radius: 3px;\\n    width: 100%;\\n    box-sizing: border-box;\\n  }\\n\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: #fff;\\n    padding: 10px 20px;\\n    border: none;\\n    border-radius: 3px;\\n    cursor: pointer;\\n  }\\n\\n  button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n    background-color: #0062cc;\\n  }\\n\\n  .error[_ngcontent-%COMP%] {\\n    color: red;\\n    margin-top: 5px;\\n  }\\n\\n  .balance-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    margin-top: 20px;\\n  }\\n\\n  .balance[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    font-weight: bold;\\n  }\"]\n  });\n  return AddTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}