{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { Transaction } from 'app/front/class/transaction';\nimport { TransactionService } from 'app/front/service/transaction.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/front/service/transaction.service\";\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(fb, transactionService) {\n      this.fb = fb;\n      this.transactionService = transactionService;\n      this.transactionForm = this.fb.group({\n        rib_emetteur: [''],\n        rib_recipient: [''],\n        amount: ['']\n      });\n      this.approveForm = this.fb.group({\n        code: ['']\n      });\n    }\n    ngOnInit() {}\n    onSubmit() {\n      const transaction = this.transactionForm.value;\n      this.transactionService.addTransactions(transaction).subscribe(code => {\n        this.handleModalShown();\n        console.log('Transaction code:', code);\n      }, error => {\n        console.error('An error occurred:', error);\n      });\n      this.handleModalShown();\n    }\n    /*oncode(){\r\n      this.transactionService.approvetransaction(transaction)\r\n    }*/\n    handleModalShown() {\n      const ribEmetteur = this.transactionForm.value.rib_emetteur;\n      const ribRecipient = this.transactionForm.value.rib_recipient;\n      const amount = this.transactionForm.value.amount;\n      // Assign the transaction data to the 'transactionData' variable in your component\n      this.transactionData = new Transaction();\n      this.transactionData.rib_emetteur = ribEmetteur;\n      this.transactionData.rib_recipient = ribRecipient;\n      this.transactionData.amount = amount;\n      // Call the 'approveTransaction' method in your component to send the transaction data to the backend\n    }\n\n    approveTransaction() {\n      this.transactionService.approvetransaction(this.transaction).subscribe(response => {\n        console.log(response);\n        // Handle the response from the backend here\n      }, error => {\n        console.log(error);\n        // Handle the error from the backend here\n      });\n    }\n  }\n\n  TransferComponent.ɵfac = function TransferComponent_Factory(t) {\n    return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionService));\n  };\n  TransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferComponent,\n    selectors: [[\"app-transfer\"]],\n    decls: 18,\n    vars: 0,\n    consts: [[\"type\", \"button\", \"data-toggle\", \"modal\", \"data-target\", \"#exampleModal\", 1, \"btn\", \"btn-primary\"], [\"id\", \"exampleModal\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [\"id\", \"exampleModalLabel\", 1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n    template: function TransferComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \" Launch demo modal\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"h5\", 5);\n        i0.ɵɵtext(7, \"Modal title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6)(9, \"span\", 7);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵtext(12, \" ... \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"button\", 10);\n        i0.ɵɵtext(15, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 11);\n        i0.ɵɵtext(17, \"Save changes\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    }\n  });\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}