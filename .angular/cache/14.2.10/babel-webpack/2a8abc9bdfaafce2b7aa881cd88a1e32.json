{"ast":null,"code":"import { Transaction } from 'app/front/class/transaction';\nimport { TransactionService } from 'app/front/service/transaction.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"app/front/service/transaction.service\";\nimport * as i2 from \"@angular/forms\";\nexport let AddTransactionComponent = /*#__PURE__*/(() => {\n  class AddTransactionComponent {\n    constructor(transactionService) {\n      this.transactionService = transactionService;\n      this.zoom = 14;\n      this.lat = 44.445248;\n      this.lng = 26.099672;\n      this.styles = [{\n        \"featureType\": \"water\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#e9e9e9\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"landscape\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 17\n        }]\n      }, {\n        \"featureType\": \"road.highway\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 29\n        }, {\n          \"weight\": 0.2\n        }]\n      }, {\n        \"featureType\": \"road.arterial\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 18\n        }]\n      }, {\n        \"featureType\": \"road.local\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"featureType\": \"poi\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f5f5f5\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"featureType\": \"poi.park\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#dedede\"\n        }, {\n          \"lightness\": 21\n        }]\n      }, {\n        \"elementType\": \"labels.text.stroke\",\n        \"stylers\": [{\n          \"visibility\": \"on\"\n        }, {\n          \"color\": \"#ffffff\"\n        }, {\n          \"lightness\": 16\n        }]\n      }, {\n        \"elementType\": \"labels.text.fill\",\n        \"stylers\": [{\n          \"saturation\": 36\n        }, {\n          \"color\": \"#333333\"\n        }, {\n          \"lightness\": 40\n        }]\n      }, {\n        \"elementType\": \"labels.icon\",\n        \"stylers\": [{\n          \"visibility\": \"off\"\n        }]\n      }, {\n        \"featureType\": \"transit\",\n        \"elementType\": \"geometry\",\n        \"stylers\": [{\n          \"color\": \"#f2f2f2\"\n        }, {\n          \"lightness\": 19\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.fill\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 20\n        }]\n      }, {\n        \"featureType\": \"administrative\",\n        \"elementType\": \"geometry.stroke\",\n        \"stylers\": [{\n          \"color\": \"#fefefe\"\n        }, {\n          \"lightness\": 17\n        }, {\n          \"weight\": 1.2\n        }]\n      }];\n      this.data = new Date();\n      this.alerts = [];\n      this.newTransactionDto = new Transaction();\n    }\n    ngOnInit() {}\n    ngOnDestroy() {}\n    addTransaction(form) {\n      //this.newTransactionDTO.id_acc= form.value.id_acc;\n      console.log(\"transaction = \" + JSON.stringify(this.transactionDTO));\n      this.transactionService.addTransaction(form).subscribe(response => console.log(response), error => console.log(error));\n    }\n  }\n  AddTransactionComponent.ɵfac = function AddTransactionComponent_Factory(t) {\n    return new (t || AddTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionService));\n  };\n  AddTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddTransactionComponent,\n    selectors: [[\"app-add-transaction\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[3, \"ngSubmit\"], [\"myform\", \"ngForm\"], [\"for\", \"id_acc\"], [\"type\", \"text\", \"id\", \"id_acc\", \"name\", \"id_acc\", \"ngModel\", \"\"], [\"for\", \"type\"], [\"id\", \"type\", \"name\", \"type\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"DEPOSITS\"], [\"value\", \"WITHDRAWL\"], [\"value\", \"TRANSFER\"], [\"value\", \"LOANPAYMENTS\"], [\"type\", \"submit\"]],\n    template: function AddTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AddTransactionComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.addTransaction(_r0));\n        });\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Account ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementStart(5, \"label\", 4);\n        i0.ɵɵtext(6, \"Type:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddTransactionComponent_Template_select_ngModelChange_7_listener($event) {\n          return ctx.transactionDTO.typeTrans = $event;\n        });\n        i0.ɵɵelementStart(8, \"option\", 6);\n        i0.ɵɵtext(9, \"Deposit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 7);\n        i0.ɵɵtext(11, \"Withdrawal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"option\", 8);\n        i0.ɵɵtext(13, \"Transfer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"option\", 9);\n        i0.ɵɵtext(15, \"Loan Payment\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵelementStart(17, \"button\", 10);\n        i0.ɵɵtext(18, \"Add Transaction\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.transactionDTO.typeTrans);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: bottom;\\n      align-items: bottom;\\n      height: 1000vh;\\n    }\\n    \\n    form[_ngcontent-%COMP%] {\\n      width: 70%;\\n      padding: 20px;\\n      border: 1px solid #ddd;\\n      border-radius: 5px;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    }\\n    \\n    label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 5px;\\n    }\\n    \\n    input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n      margin-bottom: 10px;\\n      padding: 5px;\\n      border: 1px solid #ddd;\\n      border-radius: 3px;\\n      width: 100%;\\n      box-sizing: border-box;\\n    }\\n    \\n    button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n      background-color: #007bff;\\n      color: #fff;\\n      padding: 10px 20px;\\n      border: none;\\n      border-radius: 3px;\\n      cursor: pointer;\\n    }\\n    \\n    button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n      background-color: #0062cc;\\n    }\\n    \\n    .error[_ngcontent-%COMP%] {\\n      color: red;\\n      margin-top: 5px;\\n    }\"]\n  });\n  return AddTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}