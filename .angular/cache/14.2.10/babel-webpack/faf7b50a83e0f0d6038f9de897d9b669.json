{"ast":null,"code":"import { FormBuilder } from '@angular/forms';\nimport { TransactionService } from 'app/front/service/transaction.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"app/front/service/transaction.service\";\nexport let TransferComponent = /*#__PURE__*/(() => {\n  class TransferComponent {\n    constructor(fb, transactionService) {\n      this.fb = fb;\n      this.transactionService = transactionService;\n      this.transactionForm = this.fb.group({\n        ribEmetteur: [''],\n        ribRecipient: [''],\n        amount: ['']\n      });\n    }\n    ngOnInit() {\n      throw new Error('Method not implemented.');\n    }\n    onSubmit() {\n      const transaction = this.transactionForm.value;\n      this.transactionService.addTransactions(transaction).subscribe(code => {\n        console.log('Transaction code:', code);\n      }, error => {\n        console.error('An error occurred:', error);\n      });\n    }\n  }\n  TransferComponent.ɵfac = function TransferComponent_Factory(t) {\n    return new (t || TransferComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TransactionService));\n  };\n  TransferComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransferComponent,\n    selectors: [[\"app-transfer\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[1, \"form-container\"], [3, \"formGroup\", \"submit\"], [\"for\", \"ribEmetteur\"], [\"type\", \"text\", \"id\", \"ribEmetteur\", \"formControlName\", \"ribEmetteur\"], [\"for\", \"ribRecipient\"], [\"type\", \"text\", \"id\", \"ribRecipient\", \"formControlName\", \"ribRecipient\"], [\"for\", \"amount\"], [\"type\", \"text\", \"id\", \"amount\", \"formControlName\", \"amount\"], [\"type\", \"submit\"]],\n    template: function TransferComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function TransferComponent_Template_form_submit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 2);\n        i0.ɵɵtext(4, \"Rib Em\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 4);\n        i0.ɵɵtext(8, \"Rib Rec\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 6);\n        i0.ɵɵtext(12, \"Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"button\", 8);\n        i0.ɵɵtext(16, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.transactionForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".form-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      height: 100vh;\\n    }\\n  \\n    form[_ngcontent-%COMP%] {\\n      width: 50%;\\n      padding: 20px;\\n      border: 1px solid #ddd;\\n      border-radius: 5px;\\n      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n    }\\n  \\n    label[_ngcontent-%COMP%] {\\n      display: block;\\n      margin-bottom: 5px;\\n    }\\n  \\n    input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n      margin-bottom: 10px;\\n      padding: 5px;\\n      border: 1px solid #ddd;\\n      border-radius: 3px;\\n      width: 100%;\\n      box-sizing: border-box;\\n    }\\n  \\n    button[type=\\\"submit\\\"][_ngcontent-%COMP%] {\\n      background-color: #007bff;\\n      color: #fff;\\n      padding: 10px 20px;\\n      border: none;\\n      border-radius: 3px;\\n      cursor: pointer;\\n    }\\n  \\n    button[type=\\\"submit\\\"][_ngcontent-%COMP%]:hover {\\n      background-color: #0062cc;\\n    }\\n  \\n    .error[_ngcontent-%COMP%] {\\n      color: red;\\n      margin-top: 5px;\\n    }\\n  \\n    .balance-container[_ngcontent-%COMP%] {\\n      display: flex;\\n      justify-content: center;\\n      align-items: center;\\n      margin-top: 20px;\\n    }\\n  \\n    .balance[_ngcontent-%COMP%] {\\n      font-size: 24px;\\n      font-weight: bold;\\n    }\"]\n  });\n  return TransferComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}